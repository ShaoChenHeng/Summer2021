{"remainingRequest":"/home/scheng/.emacs.d/site-lisp/emacs-application-framework/app/vue-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/scheng/.emacs.d/site-lisp/emacs-application-framework/app/vue-demo/src/components/dynamicPolygon.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/scheng/.emacs.d/site-lisp/emacs-application-framework/app/vue-demo/src/components/dynamicPolygon.vue","mtime":1626947035992},{"path":"/home/scheng/.emacs.d/site-lisp/emacs-application-framework/app/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/scheng/.emacs.d/site-lisp/emacs-application-framework/app/vue-demo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/scheng/.emacs.d/site-lisp/emacs-application-framework/app/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/scheng/.emacs.d/site-lisp/emacs-application-framework/app/vue-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdkeW5hbWljUG9seWdvbicsCgogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBmdW5jdGlvbigpIHsKICAgICAgICAgICAgdmFyIGRlZmF1bHRTaWRlcyA9IDEwOwogICAgICAgICAgICB2YXIgc3RhdHMgPSBBcnJheS5hcHBseShudWxsLCB7IGxlbmd0aDogZGVmYXVsdFNpZGVzIH0pLm1hcCgKICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiAxMDA7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICBzdGF0czogc3RhdHMsCiAgICAgICAgICAgICAgICBwb2ludHM6IGdlbmVyYXRlUG9pbnRzKHN0YXRzKSwKICAgICAgICAgICAgICAgIHNpZGVzOiBkZWZhdWx0U2lkZXMsCiAgICAgICAgICAgICAgICBtaW5SYWRpdXM6IDUwLAogICAgICAgICAgICAgICAgaW50ZXJ2YWw6IG51bGwsCiAgICAgICAgICAgICAgICB1cGRhdGVJbnRlcnZhbDogNTAwCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIH0sCiAgICAgICAgfQogICAgfSwKCiAgICB3YXRjaDogewogICAgICAgICAgc2lkZXM6IGZ1bmN0aW9uKG5ld1NpZGVzLCBvbGRTaWRlcykgewogICAgICAgICAgICB2YXIgc2lkZXNEaWZmZXJlbmNlID0gbmV3U2lkZXMgLSBvbGRTaWRlczsKICAgICAgICAgICAgaWYgKHNpZGVzRGlmZmVyZW5jZSA+IDApIHsKICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8PSBzaWRlc0RpZmZlcmVuY2U7IGkrKykgewogICAgICAgICAgICAgICAgdGhpcy5zdGF0cy5wdXNoKHRoaXMubmV3UmFuZG9tVmFsdWUoKSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHZhciBhYnNvbHV0ZVNpZGVzRGlmZmVyZW5jZSA9IE1hdGguYWJzKHNpZGVzRGlmZmVyZW5jZSk7CiAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPD0gYWJzb2x1dGVTaWRlc0RpZmZlcmVuY2U7IGkrKykgewogICAgICAgICAgICAgICAgdGhpcy5zdGF0cy5zaGlmdCgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHN0YXRzOiBmdW5jdGlvbihuZXdTdGF0cykgewogICAgICAgICAgICBUd2VlbkxpdGUudG8odGhpcy4kZGF0YSwgdGhpcy51cGRhdGVJbnRlcnZhbCAvIDEwMDAsIHsKICAgICAgICAgICAgICBwb2ludHM6IGdlbmVyYXRlUG9pbnRzKG5ld1N0YXRzKQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0sCiAgICAgICAgICB1cGRhdGVJbnRlcnZhbDogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHRoaXMucmVzZXRJbnRlcnZhbCgpOwogICAgICAgICAgfQogICAgICAgIH0sCgoKICAgICAgICBtb3VudGVkOiBmdW5jdGlvbigpIHsKICAgICAgICAgIHRoaXMucmVzZXRJbnRlcnZhbCgpOwogICAgICAgIH0sCgoKICAgICAgICBtZXRob2RzOiB7CiAgICAgICAgICByYW5kb21pemVTdGF0czogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHZhciB2bSA9IHRoaXM7CiAgICAgICAgICAgIHRoaXMuc3RhdHMgPSB0aGlzLnN0YXRzLm1hcChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICByZXR1cm4gdm0ubmV3UmFuZG9tVmFsdWUoKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9LAogICAgICAgICAgbmV3UmFuZG9tVmFsdWU6IGZ1bmN0aW9uKCkgewogICAgICAgICAgICByZXR1cm4gTWF0aC5jZWlsKAogICAgICAgICAgICAgIHRoaXMubWluUmFkaXVzICsgTWF0aC5yYW5kb20oKSAqICgxMDAgLSB0aGlzLm1pblJhZGl1cykKICAgICAgICAgICAgKTsKICAgICAgICAgIH0sCiAgICAgICAgICByZXNldEludGVydmFsOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgdmFyIHZtID0gdGhpczsKICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKTsKICAgICAgICAgICAgdGhpcy5yYW5kb21pemVTdGF0cygpOwogICAgICAgICAgICB0aGlzLmludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgdm0ucmFuZG9taXplU3RhdHMoKTsKICAgICAgICAgICAgfSwgdGhpcy51cGRhdGVJbnRlcnZhbCk7CiAgICAgICAgICB9CiAgICAgICAgfQoKfQoKCmZ1bmN0aW9uIHZhbHVlVG9Qb2ludCh2YWx1ZSwgaW5kZXgsIHRvdGFsKSB7CiAgICB2YXIgeCA9IDA7CiAgICB2YXIgeSA9IC12YWx1ZSAqIDAuOTsKICAgIHZhciBhbmdsZSA9ICgoTWF0aC5QSSAqIDIpIC8gdG90YWwpICogaW5kZXg7CiAgICB2YXIgY29zID0gTWF0aC5jb3MoYW5nbGUpOwogICAgdmFyIHNpbiA9IE1hdGguc2luKGFuZ2xlKTsKICAgIHZhciB0eCA9IHggKiBjb3MgLSB5ICogc2luICsgMTAwOwogICAgdmFyIHR5ID0geCAqIHNpbiArIHkgKiBjb3MgKyAxMDA7CiAgICByZXR1cm4geyB4OiB0eCwgeTogdHkgfTsKfQoKZnVuY3Rpb24gZ2VuZXJhdGVQb2ludHMoc3RhdHMpIHsKICAgIHZhciB0b3RhbCA9IHN0YXRzLmxlbmd0aDsKICAgIHJldHVybiBzdGF0cyAubWFwKCAgCiAgICAgICAgZnVuY3Rpb24oc3RhdCwgaW5kZXgpIHsKICAgICAgICAgICAgdmFyIHBvaW50ID0gdmFsdWVUb1BvaW50KHN0YXQsIGluZGV4LCB0b3RhbCk7CiAgICAgICAgICAgIHJldHVybiBwb2ludC54ICsgIiwiICsgcG9pbnQueTsKICAgICAgICB9KSAuam9pbigiICIpOwp9CgoK"},{"version":3,"sources":["dynamicPolygon.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dynamicPolygon.vue","sourceRoot":"src/components","sourcesContent":["<head>\n    \n</head>\n\n<template>\n   \n    <div id=\"app\">\n        <svg width=\"200\" height=\"200\">\n            <polygon :points=\"points\"></polygon>\n            <circle cx=\"100\" cy=\"100\" r=\"90\"></circle>\n        </svg>\n\n        <label> Sides : {{sides}} </label>\n        <input type=\"range\" min=\"3\" max=\"500\" v-model.number=\"sides\" />\n        <label>Minimum Radius: {{minRadius}} % </label>\n        <input type=\"range\" min=\"0\" max=\"90\" v-model.number=\"minRadius\" />\n        <label>Update Interval: {{ updateInterval }} milliseconds</label>\n        <input type=\"range\" min=\"10\" max=\"2000\" v-model.number=\"updateInterval\" />\n    </div>\n    \n</template>\n\n\n<script>\nexport default {\n    name: 'dynamicPolygon',\n\n    data() {\n        return {\n            function() {\n            var defaultSides = 10;\n            var stats = Array.apply(null, { length: defaultSides }).map(\n                function() {\n                    return 100;\n                }\n            );\n            return {\n                stats: stats,\n                points: generatePoints(stats),\n                sides: defaultSides,\n                minRadius: 50,\n                interval: null,\n                updateInterval: 500\n            };\n            },\n        }\n    },\n\n    watch: {\n          sides: function(newSides, oldSides) {\n            var sidesDifference = newSides - oldSides;\n            if (sidesDifference > 0) {\n              for (var i = 1; i <= sidesDifference; i++) {\n                this.stats.push(this.newRandomValue());\n              }\n            } else {\n              var absoluteSidesDifference = Math.abs(sidesDifference);\n              for (var i = 1; i <= absoluteSidesDifference; i++) {\n                this.stats.shift();\n              }\n            }\n          },\n          stats: function(newStats) {\n            TweenLite.to(this.$data, this.updateInterval / 1000, {\n              points: generatePoints(newStats)\n            });\n          },\n          updateInterval: function() {\n            this.resetInterval();\n          }\n        },\n\n\n        mounted: function() {\n          this.resetInterval();\n        },\n\n\n        methods: {\n          randomizeStats: function() {\n            var vm = this;\n            this.stats = this.stats.map(function() {\n              return vm.newRandomValue();\n            });\n          },\n          newRandomValue: function() {\n            return Math.ceil(\n              this.minRadius + Math.random() * (100 - this.minRadius)\n            );\n          },\n          resetInterval: function() {\n            var vm = this;\n            clearInterval(this.interval);\n            this.randomizeStats();\n            this.interval = setInterval(function() {\n              vm.randomizeStats();\n            }, this.updateInterval);\n          }\n        }\n\n}\n\n\nfunction valueToPoint(value, index, total) {\n    var x = 0;\n    var y = -value * 0.9;\n    var angle = ((Math.PI * 2) / total) * index;\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var tx = x * cos - y * sin + 100;\n    var ty = x * sin + y * cos + 100;\n    return { x: tx, y: ty };\n}\n\nfunction generatePoints(stats) {\n    var total = stats.length;\n    return stats .map(  \n        function(stat, index) {\n            var point = valueToPoint(stat, index, total);\n            return point.x + \",\" + point.y;\n        }) .join(\" \");\n}\n\n\n</script>\n\n<style>\n    svg {\n        display: block;\n    }\n    \n    polygon {\n        fill: #41b883;\n    }\n    circle {\n        fill: transparent;\n        stroke: #35495e;\n    }\n    input[type=\"range\"] {\n        display: block;\n        width: 25%;\n        margin-bottom: 15px;\n    }\n</style>    \n"]}]}